# Stark Accessibility Audit
# https://aka.ms/yaml

parameters:
  # This is used by the Stark web application when it runs the pipeline for you.
  # The token is provided by Stark automatically, and is needed to send this scan's results back to Stark.
  - name: token
    displayName: Stark token
    type: string
    default: ""

trigger:
  # This pipeline must be triggered from within the Stark web application to function properly.
  - none

pool:
  vmImage: ubuntu-latest

steps:
  # This is where you execute the commands needed to build and run your server locally in the background.
  # NOTE: the '&' at the end of the 'npm run dev &' command is needed to ensure the pipeline can continue to the next step.
  - script: |
      npm i
      npm run dev &
    displayName: "Build and run server"

  # This is where you configure your Stark Accessibility Audit.
  - task: StarkAccessibilityAudit@1
    env:
      # These are needed for the task to report scan results back to Stark.
      STARK_REPORT_URL: https://dh-stark.ngrok.dev/api/cli-webhooks/scan-result/:scanId
      STARK_COMPLETION_URL: https://dh-stark.ngrok.dev/api/cli-webhooks/end-scan/:scanId
    inputs:
      # [Required] This predefined value will use the token Stark provides when starting the pipeline.
      token: "${{ parameters.token }}"

      # [Required] A list of URLs to be scanned, with each URL on its own line.
      # This value follows YAML conventions for multiline strings.
      urls: |
        http://localhost:3000

      # [Optional] The number of milliseconds to wait before your app is ready.
      # Defaults to 5000
      waitTime: 5000

      # [Optional] Minimum score for the action to pass. A number from 0 to 100.
      # Defaults to 0
      minScore: 0

      # [Optional] Navigation timeout for puppeteer in ms. How long should puppeteer wait till it checks page load (wait until event) is complete.
      # Note: This timeout applies to all pages in your URL list individually
      # Defaults to 30000 ms
      puppeteerTimeout: 30000

      # [Optional] Event that puppeteer looks out for to assume completed navigation to a given page. In case of multiple values, navigation is considered to be successful after all events have been fired.
      # This can be multiple values from [load, domcontentloaded, networkidle0, networkidle2], with each value on its own line.
      # This value follows YAML conventions for multiline strings.
      # Example:
      #   puppeteerWaitUntil: |
      #     load
      #     domcontentloaded
      # Defaults to load
      puppeteerWaitUntil: "load"

      # [Optional] Run puppeteer in stealth mode. Attempts to hide puppeteer from your server. Won't be necessary for localhost
      # Note: Uses puppeteer-extra stealth-mode. This is not a guaranteed way to hide usage of automated software to control browsers.
      # Defaults to false (use if you have bot checks in your server code)
      stealthMode: false

      # [Optional] If a URL scan failed, scans the next one without failing the task.
      # Defaults to false
      skipErrors: false

      # [Optional] Adds a delay in milliseconds before running the scan. This is different from the timeout and delay in the sense that this delay occurs after the page is navigated to.
      # Defaults to 100 ms
      scanDelay: 100